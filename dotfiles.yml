---
- name: Setup local workstation
  hosts: localhost
  vars:
    install_homebrew_if_missing: false
  vars_files:
    - ./vars/custom.yml
  pre_tasks:
    - name: intel | Ensure Homebrew Is Installed
      stat:
        path: /usr/local/bin/brew
      register: homebrew_check
      when:
        - ansible_facts['os_family'] == 'Darwin'
        - ansible_facts['architecture'] == 'x86_64'

    - name: apple silicon | Ensure Homebrew Is Installed
      stat:
        path: /opt/homebrew/bin/brew
      register: homebrew_check
      when:
        - ansible_facts['os_family'] == 'Darwin'
        - ansible_facts['architecture'] == 'arm64'

    - name: Fail If Homebrew Is Not Installed and install_homebrew_if_missing Is False
      fail:
        msg: Homebrew is missing...Install from http://brew.sh/
      when:
        - not homebrew_check.stat.exists
        - not install_homebrew_if_missing

    - name: Installing Homebrew
      shell: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
      when:
        - not homebrew_check.stat.exists
        - install_homebrew_if_missing

    - name: ~/bin | Check if user bin folder is created
      stat:
        path: ~/bin
      register: user_bin_created

    - name: ~/bin | Remove bin if not directory
      ansible.builtin.file:
        path: ~/bin
        state: absent
      when:
        - user_bin_created.stat.exists
        - not (user_bin_created.stat.isdir is defined and user_bin_created.stat.isdir)

    - name: ~/bin | Create user bin directory
      ansible.builtin.file:
        path: ~/bin
        state: directory
      when:
        - not (user_bin_created.stat.isdir is defined and user_bin_created.stat.isdir)

  tasks:
    - name: Get the username running the deploy | whoami
      local_action: command whoami
      register: whoami_output
      check_mode: no

    - name: Check current shell
      shell: echo $SHELL
      register: current_shell_output
      check_mode: no

    - name: zsh | Installs zsh | brew
      community.general.homebrew:
        name: zsh
      when: current_shell_output.stdout != "/bin/zsh"

    - name: zsh | Sets zsh as default shell for root | command
      command: chsh -s /bin/zsh
      register: zsh_for_root
      failed_when: zsh_for_root.rc >= 1
      changed_when: zsh_for_root.rc == 0
      when: current_shell_output.stdout != "/bin/zsh"

    - name: zsh | Sets zsh as default shell for {{ whoami_output.stdout }} | command
      command: chsh -s /bin/zsh {{ whoami_output.stdout }}
      register: zsh_for_user
      failed_when: zsh_for_user.rc >= 1
      changed_when: zsh_for_user.rc == 0
      when: current_shell_output.stdout != "/bin/zsh"

    - name: alacritty | Installs alacritty | brew cask
      community.general.homebrew_cask:
        name: alacritty

    - name: neovim | Installs neovim | brew
      community.general.homebrew:
        name: neovim

    - name: neovim | Install vim-plug for Neovim | shell
      shell: |
        curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
             https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      args:
        creates: "{{ lookup('env', 'XDG_DATA_HOME') | default(ansible_env.HOME + '/.local/share') }}/nvim/site/autoload/plug.vim"

    - name: tmux | Installs tmux | brew
      community.general.homebrew:
        name: tmux

    - name: d12frosted/emacs-plus | Tap for emacs-plus | brew tap
      community.general.homebrew_tap:
        name: d12frosted/emacs-plus

    - name: emacs-plus | Installs emacs-plus | brew
      community.general.homebrew:
        name: emacs-plus@29
        options:
          - with-modern-purple-flat-icon

    - name: emacs-plus | intel | Create symlink | file
      ansible.builtin.file:
        src: /usr/local/opt/emacs-plus@29/Emacs.app
        dest: /Applications/Emacs.app
        state: link
      when:
        - ansible_facts['os_family'] == 'Darwin'
        - ansible_facts['architecture'] == 'x86_64'

    - name: emacs-plus | apple silicon | Create symlink | file
      ansible.builtin.file:
        src: /opt/homebrew/opt/emacs-plus@29/Emacs.app
        dest: /Applications/Emacs.app
        state: link
      when:
        - ansible_facts['os_family'] == 'Darwin'
        - ansible_facts['architecture'] == 'arm64'

    - name: ripgrep | Installs ripgrep | brew
      community.general.homebrew:
        name: ripgrep

    - name: tig | Installs tig | brew
      community.general.homebrew:
        name: tig

    - name: cmake | Installs cmake | brew
      community.general.homebrew:
        name: cmake

    - name: leningen | Installs leiningen | brew
      community.general.homebrew:
        name: leiningen

    - name: clojure-lsp | Tap clojure-lsp | brew tap
      community.general.homebrew_tap:
        name: clojure-lsp/brew

    - name: clojure-lsp | Installs clojure-lsp-native | brew
      community.general.homebrew:
        name: clojure-lsp-native

    - name: go | Installs go | brew
      community.general.homebrew:
        name: go

    - name: erlang | Installs erlang | brew
      community.general.homebrew:
        name: erlang

    - name: erlang_ls | Installs rebar3 | brew
      community.general.homebrew:
        name: rebar3

    - name: erlang_ls | Check erlang_ls binary installed | file
      stat:
        path: ~/bin/erlang_ls
      register: erlang_ls_binary_stat

    - name: erlang_ls | Clone erlang_ls repo | git
      ansible.builtin.git:
        repo: https://github.com/erlang-ls/erlang_ls.git
        dest: ~/tmp/erlang_ls-tmp
      when: 
        - not ansible_check_mode
        - not erlang_ls_binary_stat['stat']['exists']

    - name: erlang_ls | Build erlang_ls | make
      community.general.make:
        chdir: ~/tmp/erlang_ls-tmp
        target: install
        params:
          PREFIX: ~/bin
      when: 
      - not ansible_check_mode
      - not erlang_ls_binary_stat['stat']['exists']

    - name: erlang_ls | Remove repo | file
      ansible.builtin.file:
        path: ~/tmp/erlang_ls-temp
        state: absent

    - name: pyenv | Installs pyenv | brew
      community.general.homebrew:
        name: pyenv

    - name: pyenv-virtualenv | Installs pyenv-virtualenv | brew
      community.general.homebrew:
        name: pyenv-virtualenv

    - name: python | check installation
      stat: 
        path: ~/.pyenv/versions/3.12.7
      register: pyenv_python

    - name: python | apple silicon
      shell: /opt/homebrew/bin/pyenv install 3.12.7
      when:
        - ansible_facts['os_family'] == 'Darwin'
        - ansible_facts['architecture'] == 'arm64'
        - not pyenv_python.stat.exists

    - name: python | intel
      shell: /opt/homebrew/bin/pyenv install 3.12.7
      when:
        - ansible_facts['os_family'] == 'Darwin'
        - ansible_facts['architecture'] == 'x86_64'
        - not pyenv_python.stat.exists

    - name: python | activate version 3.12
      shell: /opt/homebrew/bin/pyenv global 3.12

    - name: neovim | Installs neovim package | pip
      pip:
        name: neovim
        executable: ~/.pyenv/shims/pip3

    - name: rbenv | Installs rbenv | brew
      community.general.homebrew:
        name: rbenv

    - name: nvm | Installs nvm | brew
      community.general.homebrew:
        name: nvm

    - name: jdk8 | Installs jdk8 | brew cask
      community.general.homebrew_cask:
        name: temurin@8

    - name: fzf | Installs fzf | brew
      community.general.homebrew:
        name: fzf

    - name: fzf | Installs bat | brew
      community.general.homebrew:
        name: bat

    - name: karabiner-elements | Installs karabiner-elements | brew cask
      community.general.homebrew_cask:
        name: karabiner-elements

    - name: yabai | Tap koekeishiya/formulae | brew tap
      community.general.homebrew_tap:
        name: koekeishiya/formulae

    - name: yabai | Installs yabai | brew
      community.general.homebrew:
        name: yabai

    - name: skhd | Installs skhd | brew
      community.general.homebrew:
        name: skhd

    - name: jq | Installs jq | brew
      community.general.homebrew:
        name: jq

    - name: stats | Installs stats | brew cask
      community.general.homebrew:
        name: stats

    - name: Source Code Pro for Powerline | Install font | brew cask
      community.general.homebrew_cask:
        name: font-source-code-pro-for-powerline

    - name: SauceCodePro Nerd Font Mono | Install font | brew cask
      community.general.homebrew_cask:
        name: font-sauce-code-pro-nerd-font

    - name: grpcurl | Install grpcurl | brew
      community.general.homebrew:
        name: grpcurl

    - name: rcm | Installs rcm | brew
      community.general.homebrew:
        name: rcm

    - name: rcm | Installs rcm config
      command:
        cmd: rcup rcrc
      register: rcup_rcrc_output
      failed_when: rcup_rcrc_output.rc >= 1
      changed_when: rcup_rcrc_output.rc == 0

    - name: rcm | Installs dotfiles
      command:
        cmd: rcup
      register: rcup_output
      failed_when: rcup_output.rc >= 1
      changed_when: rcup_output.rc == 0
